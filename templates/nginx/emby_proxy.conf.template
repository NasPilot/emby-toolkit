# /etc/nginx/conf.d/emby_proxy.conf (V4 - .strm 精准捕获最终版)

upstream emby_server {
    server {{ EMBY_UPSTREAM }};
}

upstream virtual_library_proxy {
    server {{ PROXY_UPSTREAM }};
}

{% if REDIRECT_UPSTREAM %}
upstream redirect_service {
    server {{ REDIRECT_UPSTREAM }};
}
{% endif %}

server {
    listen {{ NGINX_LISTEN_PORT }};
    server_name your.domain.com;

    # --- 基础代理参数 ---
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "Upgrade";
    proxy_buffering off;

    # ====================================================================
    #  核心路由规则 (V4)
    # ====================================================================

    # ★★★ 规则 1：拦截并转发 .strm 请求的302重定向 ★★★
    {% if REDIRECT_UPSTREAM %}
    location ~ \.strm$ {
        # 1. 将请求代理到您的 pick_code 服务
        proxy_pass http://redirect_service;

        # 2. 【魔法开关】开启对上游服务器响应的错误/重定向码的拦截
        proxy_intercept_errors on;

        # 3. 【定义规则】告诉 Nginx：当你拦截到 302 响应时，不要自己处理，
        #    而是内部跳转到一个名为 @handle_redirect 的位置进行特殊处理。
        error_page 302 = @handle_redirect;
    }
    {% endif %}

    # ▼▼▼ 核心修改 3/3：定义我们的重定向处理程序 ▼▼▼
    # 这是一个“命名 location”，专门用于被 error_page 调用
    location @handle_redirect {
        # 提取上游服务器（pick_code 服务）返回的 Location 响应头
        # 这个变量 $upstream_http_location 里就装着真正的视频直链！
        # 然后，将这个直链作为 302 重定向返回给最初的客户端（播放器）。
        return 302 $upstream_http_location;
    }

    # --- 以下是虚拟库路由规则 ---

    location ~ /emby/Users/([a-f0-9]+)/Views {
        proxy_pass http://virtual_library_proxy;
    }

    # ★★★ 规则 2：【新增的关键规则】拦截“获取库内容”的请求 ★★★
    # 这是我们之前一直缺失的规则！
    location ~ /emby/Users/([a-f0-9]+)/Items$ {
        # 检查 URL 参数中是否包含 ParentId=-xxxxx
        if ($arg_ParentId ~ ^-\d+$) {
            # 如果是，就转发给 Python 代理
            proxy_pass http://virtual_library_proxy;
        }
        # 如果不是，就执行默认行为，转发给真实 Emby
        proxy_pass http://emby_server;
    }

    # 规则 3：拦截所有路径中包含虚拟ID的请求 (例如获取图片)
    location ~ /(emby/Users/[^/]+/Items|emby/Items)/-(\d+) {
        proxy_pass http://virtual_library_proxy;
    }

    # 规则 4：拦截虚拟库内的“元数据筛选”和“最新添加”请求
    location ~ /Items/(Prefixes|Genres|Studios|Tags|OfficialRatings|Years|Latest)$ {
        if ($arg_ParentId ~ ^-\d+$) {
            proxy_pass http://virtual_library_proxy;
        }
        if ($arg_customViewId ~ ^-\d+$) {
            proxy_pass http://virtual_library_proxy;
        }
        proxy_pass http://emby_server;
    }

    # 规则 5: WebSocket (保持不变)
    location /embywebsocket {
        proxy_pass http://emby_server;
    }

    # 兜底规则：转发所有其他请求到真实 Emby
    location / {
        proxy_pass http://emby_server;
    }
}